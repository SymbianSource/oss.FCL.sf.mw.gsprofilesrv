/*
* Copyright (c) 2008 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource file for General Settings
*
*/



//  RESOURCE IDENTIFIER
NAME    AKGP // 4 letter ID

//  INCLUDES
#include <gsautokeyguardplugin.loc>
#include "GSAutoKeyguardPlugin.hrh"

#include <avkon.loc> // Avkon localized strings
#include <avkon.mbg>
#include <avkon.rsg>
#include <eikcore.rsg>
#include <uikon.rh>

// CONSTANTS

//  RESOURCE DEFINITIONS 

RESOURCE RSS_SIGNATURE
    {
    }

// Common resources among GS
#include    "GSCommonResources.rss"

//----------------------------------------------------
//  r_gs_auto_keyguard_view_caption
// 
// Autokeyguard view caption for plugin
//----------------------------------------------------
//
RESOURCE TBUF r_gs_auto_keyguard_view_caption
    {
    buf = qtn_set_auto_keyguard_title;
    }


//----------------------------------------------------
//   
//    r_gs_sim_security_view_title
//    Security view title
//
//----------------------------------------------------
//

RESOURCE TITLE_PANE r_gs_auto_keyguard_view_title
    {
    txt = qtn_set_auto_keyguard_title;        
    }

//----------------------------------------------------
//   
//    r_gs_sim_security_softkeys_options_back__change
//    SIM security view's CBA resource
//
//----------------------------------------------------
//
RESOURCE CBA r_gs_auto_keyguard_softkeys_options_back__change
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; txt = text_softkey_option;},
        CBA_BUTTON {id=EAknSoftkeyBack; txt = text_softkey_back; },
        CBA_BUTTON {id=EAknSoftkeyChange; txt= qtn_msk_change; }
        };
    }

//----------------------------------------------------
//   
//    r_gs_sim_security_view
//    SIM security view's menu
//
//----------------------------------------------------
//
RESOURCE AVKON_VIEW r_gs_auto_keyguard_view
    {
    menubar = r_gs_auto_keyguard_menubar_change_exit;  
    cba = r_gs_auto_keyguard_softkeys_options_back__change;
    }

// -----------------------------------------------------------------------------
//
// r_gs_menubar_change_exit
// GS menu with 'change' and 'exit' items.
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_BAR r_gs_auto_keyguard_menubar_change_exit
    {
    titles =
        {
        MENU_TITLE
            {
            menu_pane = r_gs_auto_keyguard_menu_item_exit;
            },
        MENU_TITLE
            {
            menu_pane = r_gs_auto_keyguard_menu_item_help;
            },
        MENU_TITLE
            {
            menu_pane = r_gs_auto_keyguard_menu_item_change;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_gs_menu_item_exit
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_gs_auto_keyguard_menu_item_exit
    {
    items =
        {
        MENU_ITEM
            {
            command = EAknCmdExit;
            txt = qtn_options_exit;
            }
        };
    }


// -----------------------------------------------------------------------------
//
// r_gs_menu_item_change
// Change item.
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_gs_auto_keyguard_menu_item_change
    {
    items =
        {
        MENU_ITEM
            {
            command = EGSCmdAppChange;
            txt = qtn_options_change;
            flags = EEikMenuItemAction; // action command
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_gs_menu_item_help
// Change item.
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_gs_auto_keyguard_menu_item_help
    {
    items =
        {
        MENU_ITEM
            {
            command = EAknCmdHelp;
            txt = qtn_options_help;
            }
        };
    }

//----------------------------------------------------
//   
//    r_auto_keyguard_lbx
//    SIM security view's list box items
//
//----------------------------------------------------
//
RESOURCE GS_FEATURE_ARRAY r_auto_keyguard_lbx
    {
    items =
        {       
	GS_FEATURE
            {
            txt = " \t"qtn_set_auto_keyguard"\t\t";
            item = EGSSettIdAutoKeyguard;
	    type = EGSListBoxItemTypeIsDynamic;
            }
        };
    }

//----------------------------------------------------
//   
//    r_auto_keyguard_lbx
//    Autokeyguard's listbox item when Touch UI supported
//
//----------------------------------------------------
//
RESOURCE GS_FEATURE_ARRAY r_touch_auto_keyguard_lbx
    {
    items =
        {       
	GS_FEATURE
            {
            txt = " \t"qtn_set_auto_display_lock"\t\t";
            item = EGSSettIdAutoKeyguard;
	    type = EGSListBoxItemTypeIsDynamic;
            }
        };
    }

//----------------------------------------------------
//   
//    r_autokeyguard_array
//    Autokeyguard array items
//
//----------------------------------------------------
//
RESOURCE ARRAY r_autokeyguard_array
    {
    items =
        {
        LBUF
            {
            txt = qtn_set_auto_keyguard_none;
            },
	LBUF
            {
            txt = qtn_set_auto_keyguard_sec;
            },
        LBUF
            {
            txt = qtn_set_auto_keyguard_one_min;
            },
	LBUF
            {
            txt = qtn_set_auto_keyguard_min;
            }
       
        };    
    }
//----------------------------------------------------
//   
//    r_autokeyguard_setting_page
//    Autokeyguard setting page for the radio button dialog
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_autokeyguard_setting_page
    { 
    label= qtn_set_auto_keyguard;
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
    type =  EAknSetListBox;
    editor_resource_id= r_autokeyguard_listbox;
    }

//----------------------------------------------------
//   
//    r_autokeyguard_listbox
//    Autokeyguard listbox
//
//----------------------------------------------------
//
RESOURCE LISTBOX r_autokeyguard_listbox
    {
    array_id = r_autokeyguard_lbx;
    flags = EEikListBoxMultipleSelection;
    }

//----------------------------------------------------
//   
//    r_autokeyguard_lbx
//    Autolock array items
//
//----------------------------------------------------
//
RESOURCE ARRAY r_autokeyguard_lbx
        {
        items =
            {
            LBUF
                {//autokeyguard off
                txt = qtn_set_auto_keyguard_none;
                },
            LBUF
                {//user defined
                txt = qtn_set_auto_keyguard_userdefined;
                }
            };      
    }

//----------------------------------------------------
//  r_auto_keyguard_minsec
// 
// Autokeyguard resource string for minutes and seconds
//----------------------------------------------------
//
RESOURCE TBUF r_auto_keyguard_minsec
    {
    buf = qtn_set_auto_keyguard_minsec;
    }

//----------------------------------------------------
//  r_auto_keyguard_one_min_sec
// 
// Autokeyguard resource string for minutes and seconds
//----------------------------------------------------
//
RESOURCE TBUF r_auto_keyguard_one_min_sec
    {
    buf = qtn_set_auto_keyguard_one_min_sec;
    }

//----------------------------------------------------
//   
//    r_autokeyguard_time_setting_query
//    Autokeyguard period query
//
//----------------------------------------------------
//  
RESOURCE DIALOG r_autokeyguard_time_setting_query
    {
    flags=EGeneralQueryFlags;
    buttons=R_AVKON_SOFTKEYS_OK_CANCEL__OK;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control = AVKON_DATA_QUERY
                { 
                    layout = ETimeLayout;
                    label = qtn_set_auto_keyguard_query;
                    control = TIME_EDITOR
                    {
                    minTime= TIME {second=5;minute=0;hour=0;};
                    maxTime= TIME {second=59;minute=59;};
                    flags= EEikTimeWithoutHoursField | EEikTimeForce24HourFormat;
                    };  
                };
            }
        };

    }


//----------------------------------------------------
//   
//    r_autokeyguard_touch_time_setting_query
//    Autokeyguard period query
//
//----------------------------------------------------
//  
RESOURCE DIALOG r_autokeyguard_touch_time_setting_query
    {
    flags=EGeneralQueryFlags;
    buttons=R_AVKON_SOFTKEYS_OK_CANCEL__OK;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control = AVKON_DATA_QUERY
                { 
                    layout = ETimeLayout;
                    label = qtn_set_auto_display_lock_query;
                    control = TIME_EDITOR
                    {
                    minTime= TIME {second=5;minute=0;hour=0;};
                    maxTime= TIME {second=59;minute=59;};
                    flags= EEikTimeWithoutHoursField | EEikTimeForce24HourFormat;
                    };  
                };
            }
        };

    }

//End of File
